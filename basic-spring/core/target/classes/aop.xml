<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="aopTest" class="springbasic.aop.AopTest"/>
    <bean id="aBean" class="springbasic.aop.AspectTest"></bean>
    <bean id="fooService" class="springbasic.aop.DefaultFooService"/>
    <bean id="profiler" class="springbasic.aop.SimpleProfiler"/>

    <bean id="student" class="springbasic.aop.studentImpl">
        <property name="studentNo" value="1001"/>
        <property name="studentName" value="John Peter"/>
    </bean>
    <bean id="studentAdditionalDetails" class="springbasic.aop.StudentAdditionalDetailsImpl">
        <property name="city" value="New York"/>
        <property name="country" value="Ameriaca"/>
     </bean>

    <aop:config>
        <aop:pointcut id="hello" expression="execution(* springbasic.aop.AopTest.hello(..))"/>
        <aop:pointcut id="helloThrow" expression="execution(* springbasic.aop.AopTest.helloThrowException(..))"/>

        <aop:aspect id="myAspect" ref="aBean">
            <aop:pointcut id="businessService" expression="execution(* springbasic.aop.AopTest.hello(..)) and this(service)"/>
            <aop:before pointcut-ref="businessService" method="monitor"/>

            <aop:before method="beforeMethod" pointcut-ref="hello"/>
            <aop:after-returning method="afterMethodReturning" returning="retVal" pointcut-ref="hello"/>

            <aop:after-throwing method="methodException" pointcut-ref="helloThrow" throwing="ex"/>
        </aop:aspect>

        <aop:aspect ref="profiler">
            <aop:pointcut id="theExecutionOfSomeFooServiceMethod" expression="execution(* springbasic.aop.DefaultFooService.getFoo(..)) and args(name, age)"/>
            <aop:around method="profile" pointcut-ref="theExecutionOfSomeFooServiceMethod"/>
        </aop:aspect>

        <aop:aspect>
            <aop:declare-parents types-matching="springbasic.aop.StudentAdditionalDetails+" implement-interface="springbasic.aop.Student" delegate-ref="student"/>
        </aop:aspect>
    </aop:config>

    <!--<tx:advice id="tx-advice">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!---->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="tx-advice" pointcut-ref="theExecutionOfSomeFooServiceMethod"/>-->
    <!--</aop:config>-->



</beans>